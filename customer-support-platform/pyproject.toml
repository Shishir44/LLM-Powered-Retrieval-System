[tool.poetry]
name = "customer-support-platform"
version = "1.0.0"
description = "Production-ready customer support platform with LangChain and LangGraph"
authors = ["Your Team <team@company.com>"]
readme = "README.md"
packages = [
    { include = "services" },
    { include = "shared" },
]

[tool.poetry.dependencies]
python = "^3.11"
# Web Framework
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"

# LangChain & LangGraph
langchain = "^0.0.340"
langchain-openai = "^0.0.2"
langgraph = "^0.0.20"
langchain-community = "^0.0.3"

# Vector Stores
pinecone-client = "^2.2.4"
weaviate-client = "^3.25.3"
chromadb = "^0.4.18"

# Database
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
psycopg2-binary = "^2.9.9"
redis = "^5.0.1"

# Authentication & Security
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"

# Monitoring & Observability
prometheus-client = "^0.19.0"
opentelemetry-api = "^1.21.0"
opentelemetry-sdk = "^1.21.0"
opentelemetry-exporter-jaeger = "^1.21.0"
opentelemetry-instrumentation-fastapi = "^0.42b0"
opentelemetry-instrumentation-sqlalchemy = "^0.42b0"
opentelemetry-instrumentation-redis = "^0.42b0"

# HTTP Client
httpx = "^0.25.2"
aiohttp = "^3.9.1"

# Utilities
python-dotenv = "^1.0.0"
structlog = "^23.2.0"
typer = "^0.9.0"
rich = "^13.7.0"
tenacity = "^8.2.3"

# Message Queue
kafka-python = "^2.0.2"
aiokafka = "^0.9.0"

# NLP & ML
transformers = "^4.36.2"
torch = "^2.1.2"
sentence-transformers = "^2.2.2"
spacy = "^3.7.2"
nltk = "^3.8.1"

# Testing
pytest = "^7.4.3"
pytest-asyncio = "^0.23.2"
pytest-cov = "^4.1.0"
httpx = "^0.25.2"
pytest-mock = "^3.12.0"

[tool.poetry.group.dev.dependencies]
# Development Tools
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
pre-commit = "^3.6.0"

# Documentation
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.8"
mkdocs-swagger-ui-tag = "^0.6.8"

# Debugging
debugpy = "^1.8.0"
ipdb = "^0.13.13"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "pinecone",
    "weaviate",
    "chromadb",
    "transformers",
    "spacy",
    "nltk",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=services",
    "--cov=shared",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["services", "shared"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]